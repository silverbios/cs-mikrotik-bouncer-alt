name: Build and Publish Container

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  actions: read

env:
  BUILDKIT_PROGRESS: plain
  OWNER: silverbios
  REPO_NAME: ${{ github.event.repository.name }}
  IMAGE_NAME: ${{ github.event.repository.full_name }}
  BASE_VERSION: v0.2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      # Only log in for push events from your repoâ€”skip on PRs entirely
      - name: Login to GHCR
        if: github.event_name == 'push' && github.repository_owner == env.OWNER
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Generate dynamic tags
        id: tags
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          VERSION_TAG="${BASE_VERSION}-g${SHORT_SHA}"
          echo "VERSION_TAG=$VERSION_TAG" >> "$GITHUB_ENV"

      - name: Docker meta (for ko tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          # IMPORTANT: hard-pin to your namespace
          images: ghcr.io/${{ env.OWNER }}/${{ env.REPO_NAME }}
          sep-tags: ","
          sep-labels: ","
          tags: |
            type=raw,value=${{ env.VERSION_TAG }}
            type=raw,value=latest

      - name: Install ko
        uses: imjasonh/setup-ko@v0.9
        env:
          # IMPORTANT: hard-pin to your namespace
          KO_DOCKER_REPO: ghcr.io/${{ env.OWNER }}/${{ env.REPO_NAME }}

      - name: Build with ko (push only on your repo & push events)
        env:
          KO_DOCKER_REPO: ghcr.io/${{ env.OWNER }}/${{ env.REPO_NAME }}
          TAGS: ${{ steps.meta.outputs.tags }}
          LABELS: ${{ steps.meta.outputs.labels }}
          PLATFORMS: linux/amd64,linux/arm64,linux/arm
        run: |
          set -euo pipefail
          go mod tidy

          # Remove the registry/repo prefix so ko -t gets just the tag list
          PTAGS=$(echo "$TAGS" | sed "s|ghcr.io/${OWNER}/${REPO_NAME}:||g")
          export SOURCE_DATE_EPOCH=$(date +%s)

          echo "KO_DOCKER_REPO=$KO_DOCKER_REPO"
          echo "TAGS=$TAGS"
          echo "PTAGS=$PTAGS"
          echo "LABELS=$LABELS"
          echo "PLATFORMS=$PLATFORMS"

          # PRs: build only (no push). Pushes from your repo: build & push.
          if [[ "${GITHUB_EVENT_NAME}" == "push" && "${GITHUB_REPOSITORY_OWNER}" == "${OWNER}" ]]; then
            ko build -B --image-label "$LABELS" -t "$PTAGS" --platform="$PLATFORMS" --push .
          else
            ko build -B --image-label "$LABELS" -t "$PTAGS" --platform="$PLATFORMS" .
          fi